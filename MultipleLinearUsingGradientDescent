{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1f370f6b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:08.628945Z",
     "iopub.status.busy": "2024-04-17T16:56:08.628565Z",
     "iopub.status.idle": "2024-04-17T16:56:10.673245Z",
     "shell.execute_reply": "2024-04-17T16:56:10.672138Z"
    },
    "papermill": {
     "duration": 2.052817,
     "end_time": "2024-04-17T16:56:10.676085",
     "exception": false,
     "start_time": "2024-04-17T16:56:08.623268",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4cb3f953",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.684843Z",
     "iopub.status.busy": "2024-04-17T16:56:10.684286Z",
     "iopub.status.idle": "2024-04-17T16:56:10.712752Z",
     "shell.execute_reply": "2024-04-17T16:56:10.710949Z"
    },
    "papermill": {
     "duration": 0.035328,
     "end_time": "2024-04-17T16:56:10.715221",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.679893",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "dataframe = pd.read_csv(\"/kaggle/input/student-performance-multiple-linear-regression/Student_Performance.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9e3e9fe9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.723857Z",
     "iopub.status.busy": "2024-04-17T16:56:10.723066Z",
     "iopub.status.idle": "2024-04-17T16:56:10.742003Z",
     "shell.execute_reply": "2024-04-17T16:56:10.740929Z"
    },
    "papermill": {
     "duration": 0.0255,
     "end_time": "2024-04-17T16:56:10.744199",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.718699",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Hours Studied</th>\n",
       "      <th>Previous Scores</th>\n",
       "      <th>Extracurricular Activities</th>\n",
       "      <th>Sleep Hours</th>\n",
       "      <th>Sample Question Papers Practiced</th>\n",
       "      <th>Performance Index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7</td>\n",
       "      <td>99</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>91.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>82</td>\n",
       "      <td>No</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>51</td>\n",
       "      <td>Yes</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>52</td>\n",
       "      <td>Yes</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>No</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>66.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Hours Studied  Previous Scores Extracurricular Activities  Sleep Hours  \\\n",
       "0              7               99                        Yes            9   \n",
       "1              4               82                         No            4   \n",
       "2              8               51                        Yes            7   \n",
       "3              5               52                        Yes            5   \n",
       "4              7               75                         No            8   \n",
       "\n",
       "   Sample Question Papers Practiced  Performance Index  \n",
       "0                                 1               91.0  \n",
       "1                                 2               65.0  \n",
       "2                                 2               45.0  \n",
       "3                                 2               36.0  \n",
       "4                                 5               66.0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1ba686dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.753413Z",
     "iopub.status.busy": "2024-04-17T16:56:10.752451Z",
     "iopub.status.idle": "2024-04-17T16:56:10.757650Z",
     "shell.execute_reply": "2024-04-17T16:56:10.756685Z"
    },
    "papermill": {
     "duration": 0.011995,
     "end_time": "2024-04-17T16:56:10.759719",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.747724",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = dataframe.head(300)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a8915350",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.768744Z",
     "iopub.status.busy": "2024-04-17T16:56:10.767771Z",
     "iopub.status.idle": "2024-04-17T16:56:10.774658Z",
     "shell.execute_reply": "2024-04-17T16:56:10.773635Z"
    },
    "papermill": {
     "duration": 0.013434,
     "end_time": "2024-04-17T16:56:10.776674",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.763240",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Hours Studied', 'Previous Scores', 'Extracurricular Activities',\n",
       "       'Sleep Hours', 'Sample Question Papers Practiced', 'Performance Index'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c6f054d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.785839Z",
     "iopub.status.busy": "2024-04-17T16:56:10.785121Z",
     "iopub.status.idle": "2024-04-17T16:56:10.796090Z",
     "shell.execute_reply": "2024-04-17T16:56:10.795367Z"
    },
    "papermill": {
     "duration": 0.01789,
     "end_time": "2024-04-17T16:56:10.798241",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.780351",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = df[['Hours Studied', 'Sleep Hours']]\n",
    "y = df['Performance Index']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a2d88553",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.807518Z",
     "iopub.status.busy": "2024-04-17T16:56:10.806830Z",
     "iopub.status.idle": "2024-04-17T16:56:10.816130Z",
     "shell.execute_reply": "2024-04-17T16:56:10.815380Z"
    },
    "papermill": {
     "duration": 0.016369,
     "end_time": "2024-04-17T16:56:10.818379",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.802010",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train,y_test = train_test_split(X,y ,random_state=104,train_size=0.8, shuffle=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1e205e7a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.827116Z",
     "iopub.status.busy": "2024-04-17T16:56:10.826754Z",
     "iopub.status.idle": "2024-04-17T16:56:10.835795Z",
     "shell.execute_reply": "2024-04-17T16:56:10.835059Z"
    },
    "papermill": {
     "duration": 0.015599,
     "end_time": "2024-04-17T16:56:10.837753",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.822154",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class MultipleLinearRegressionGD:\n",
    "    def __init__(self, learning_rate=0.01, epochs=100):\n",
    "        self.learning_rate = learning_rate\n",
    "        self.epochs = epochs\n",
    "        self.theta = None\n",
    "    \n",
    "    def fit(self, X, y):\n",
    "        X = np.array(X)\n",
    "        y = np.array(y)\n",
    "\n",
    "        X = np.c_[np.ones(X.shape[0]), X]\n",
    "\n",
    "        self.theta = np.zeros(X.shape[1])\n",
    "\n",
    "        for _ in range(self.epochs):\n",
    "            y_pred = np.dot(X, self.theta)\n",
    "            errors = y_pred - y\n",
    "            gradients = 2 * np.dot(X.T, errors) / len(X)\n",
    "            self.theta -= self.learning_rate * gradients\n",
    "        \n",
    "    def predict(self, X):\n",
    "        X = np.array(X)\n",
    "        X = np.c_[np.ones(X.shape[0]), X]\n",
    "\n",
    "        return np.dot(X, self.theta)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ecaa4a0d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.846940Z",
     "iopub.status.busy": "2024-04-17T16:56:10.846332Z",
     "iopub.status.idle": "2024-04-17T16:56:10.850266Z",
     "shell.execute_reply": "2024-04-17T16:56:10.849554Z"
    },
    "papermill": {
     "duration": 0.01079,
     "end_time": "2024-04-17T16:56:10.852304",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.841514",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model = MultipleLinearRegressionGD()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4f92b991",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.861901Z",
     "iopub.status.busy": "2024-04-17T16:56:10.861235Z",
     "iopub.status.idle": "2024-04-17T16:56:10.866526Z",
     "shell.execute_reply": "2024-04-17T16:56:10.865746Z"
    },
    "papermill": {
     "duration": 0.012274,
     "end_time": "2024-04-17T16:56:10.868545",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.856271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8e69325a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-17T16:56:10.877797Z",
     "iopub.status.busy": "2024-04-17T16:56:10.877194Z",
     "iopub.status.idle": "2024-04-17T16:56:10.883321Z",
     "shell.execute_reply": "2024-04-17T16:56:10.882425Z"
    },
    "papermill": {
     "duration": 0.012848,
     "end_time": "2024-04-17T16:56:10.885249",
     "exception": false,
     "start_time": "2024-04-17T16:56:10.872401",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([59.82985665, 38.71984306, 47.31827103, 51.8491188 , 51.8491188 ,\n",
       "       56.22554405, 47.1638485 , 43.25069083, 39.18311064, 60.44754677,\n",
       "       47.1638485 , 81.71198289, 68.8915522 , 47.31827103, 26.0538349 ,\n",
       "       42.94184578, 39.18311064, 68.73712968, 47.62711608, 51.69469627,\n",
       "       39.02868811, 38.71984306, 60.13870171, 47.62711608, 38.87426559,\n",
       "       56.07112152, 64.36070443, 38.87426559, 30.43026015, 47.93596114,\n",
       "       64.36070443, 68.8915522 , 47.1638485 , 69.04597473, 77.33555764,\n",
       "       68.8915522 , 64.2062819 , 59.98427918, 68.73712968, 56.37996657,\n",
       "       34.65226287, 52.15796385, 43.25069083, 59.98427918, 56.07112152,\n",
       "       43.25069083, 34.49784034, 60.60196929, 56.22554405, 60.60196929,\n",
       "       43.55953589, 34.49784034, 39.02868811, 73.26797745, 38.71984306,\n",
       "       51.54027374, 39.02868811, 30.27583762, 68.73712968, 43.55953589])"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.predict(X_test)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3462333,
     "sourceId": 6051848,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30684,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 5.456181,
   "end_time": "2024-04-17T16:56:11.408597",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-04-17T16:56:05.952416",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
